---
const params: Array<{ field: string, type: string, description: string }> = Astro.props.params;
---
{params.length > 0 && (
    <div class="param-table-container">
        <div>
            <div class="param-table-header">
                <h3>Fields</h3>
                <h3>Description</h3>
            </div>
            {params.map((param) => (
                <div class="param-table-row">
                    <p>{param.field} <span>({param.type})</span></p>
                    <p>{param.description}</p>
                </div>
            ))}
        </div>
    </div>
)}

<style lang="scss">
    .param-table-container {
        border-radius: 8px;
        border: 1px solid #dfdfdf;
        overflow-x: hidden;

        @media (max-width: 1200px) {
            overflow-x: scroll;
        }
        
        > div {

            width: 100%;   

            @media (max-width: 1200px) {
                width: max(100%, 550px);
            }
        }
    }

    .param-table-header {
        font-family: var(--paragraph-font);    
        background-color: #dfdfdf;
        padding: 10px 12px;
        width: 100%;
        display: flex;
        box-sizing: content-box;

        > h3 {
            font-weight: 500;
            font-size: 1rem;
            margin-bottom: 0;
            color: var(--h3-light);
        }

        > h3:first-child {
            width: 200px;
        }

        > h3:last-child {
            width: min(200px, calc(100% - 200px));
        }

        @media (max-width: 1200px) {
            > h3:first-child {
                width: 150px;
                flex-shrink: 0;
            }

            > h3:last-child {
                width: 400px;
                flex-shrink: 0;
            }
        }
    }

    .param-table-row {
        display: flex;
        min-width: min-content;
        border-bottom: 1px solid #dfdfdf;
        padding: 8px 12px;
        box-sizing: border-box;

        > p {
            font-size: 0.85rem;
            color: var(--text-light);
            margin-bottom: 0;
            span {
               text-wrap:nowrap
            }
        }

        > p:first-child {
            width: 200px;
        }

        > p:last-child {
            width: max(200px, calc(100% - 200px));
        }

        @media (max-width: 1200px) {
            
            > p:first-child {
                width: 150px;
                flex-shrink: 0;
            }

            > p:last-child {
                width: 400px;
                flex-shrink: 0;
            }
        }
        
      
    }

  


</style>