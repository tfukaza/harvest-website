[{"function": "start(self, interval, aggregations, sync)", "index": "start", "short_description": "Entry point to start the system.", "long_description": null, "params": [{"name": "interval", "type": "str", "desc": "The interval to run the algorithm. ", "default": "'5MIN'", "optional": true}, {"name": "aggregations", "type": "list[str]", "desc": "A list of intervals. The Trader will aggregate data to the intervals specified in this list.\nFor example, if this is set to ['5MIN', '30MIN'], and interval is '1MIN', the algorithm will have access to\n5MIN, 30MIN aggregated data in addition to 1MIN data. ", "default": "None", "optional": true}, {"name": "sync", "type": "bool", "desc": "If true, the system will sync with the broker and fetch current positions and pending orders. ", "default": "true", "optional": true}], "returns": "", "raises": []}, {"function": "set_symbol(self)", "index": "set_symbol", "short_description": "Specifies the symbol(s) to watch.", "long_description": "Cryptocurrencies should be prepended with an `@` to differentiate them from stocks.\nFor example, '@ETH' will refer to Etherium, while 'ETH' will refer to Ethan Allen Interiors.\nIf this method was previously called, the symbols specified earlier will be replaced with the\nnew symbols.", "params": [], "returns": "", "raises": []}, {"function": "set_algo(self, algo)", "index": "set_algo", "short_description": "Specifies the algorithm to use.", "long_description": null, "params": [{"name": "algo", "type": "Algo", "desc": "The algorithm to use. You can either pass in a single Algo class, or a\nlist of Algo classes", "default": null, "optional": false}], "returns": "", "raises": []}]